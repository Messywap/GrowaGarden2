local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer

-- ðŸŒ¸ Cherry Blossom Style Grow a Garden Loading Screen

local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "GrowAGardenLoading"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true

-- Background Frame with Cherry Blossom Gradient
local bg = Instance.new("Frame", gui)
bg.Size = UDim2.new(1, 0, 1, 0)
bg.BackgroundColor3 = Color3.fromRGB(255, 230, 240) -- Base pink

local gradient = Instance.new("UIGradient", bg)
gradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 230, 240)), -- soft sakura pink
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))  -- soft white bottom
}

-- ðŸŒ¸ Play all music from Music_Folder (recursively)
local soundService = game:GetService("SoundService")
local musicFolder = soundService:FindFirstChild("Music_Folder")

-- Recursive function to collect all Sound objects
local function getAllSounds(container)
	local sounds = {}
	for _, item in pairs(container:GetDescendants()) do
		if item:IsA("Sound") then
			table.insert(sounds, item)
		end
	end
	return sounds
end

if musicFolder then
	local songs = getAllSounds(musicFolder)

	task.spawn(function()
		while true do
			for _, song in ipairs(songs) do
				song.TimePosition = 0
				song.Volume = 0.6
				song:Play()
				song.Ended:Wait()
			end
		end
	end)
else
	warn("No 'Music_Folder' found in SoundService.")
end


-- Title
local title = Instance.new("TextLabel", bg)
title.Size = UDim2.new(1, 0, 0.1, 0)
title.Position = UDim2.new(0, 0, 0.3, 0)
title.BackgroundTransparency = 1
title.Text = utf8.char(0x1F338) .. " Loading Grow a Garden..."
title.Font = Enum.Font.FredokaOne
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(120, 60, 80)
title.TextWrapped = true

-- Subtitle / Tips (rotating)
local tip = Instance.new("TextLabel", bg)
tip.Size = UDim2.new(1, 0, 0.06, 0)
tip.Position = UDim2.new(0, 0, 0.41, 0)
tip.BackgroundTransparency = 1
tip.Text = "Let your petals fall gently " .. utf8.char(0x1F338)
tip.Font = Enum.Font.GothamBold
tip.TextScaled = true
tip.TextColor3 = Color3.fromRGB(100, 60, 80)
tip.TextWrapped = true

-- Tips to cycle through
local tips = {
	"Remember to water your plants daily! " .. utf8.char(0x1F4A7),
	"Every flower blooms at its own pace " .. utf8.char(0x1F338),
	"You grow through what you go through " .. utf8.char(0x1F331),
	"Great things take time â€” just like crops " .. utf8.char(0x1F338),
	"Let your roots grow strong " .. utf8.char(0x1F333),
	"Donâ€™t stop until youâ€™re proud " .. utf8.char(0x1F33C),
	"Small seeds make mighty trees " .. utf8.char(0x1F332),
	"Patience is the key to harvest " .. utf8.char(0x1F353)
}

-- Rotate tips
task.spawn(function()
	local index = 1
	while true do
		tip.Text = tips[index]
		index = (index % #tips) + 1
		task.wait(2)
	end
end)

-- Progress Bar Background
local barBG = Instance.new("Frame", bg)
barBG.Size = UDim2.new(0.6, 0, 0.02, 0)
barBG.Position = UDim2.new(0.2, 0, 0.54, 0)
barBG.BackgroundColor3 = Color3.fromRGB(200, 255, 200)
barBG.BorderSizePixel = 0
barBG.BackgroundTransparency = 0.2
barBG.ClipsDescendants = true
barBG.ZIndex = 1

-- Progress Bar Fill
local barFill = Instance.new("Frame", barBG)
barFill.Size = UDim2.new(0, 0, 1, 0)
barFill.Position = UDim2.new(0, 0, 0, 0)
barFill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
barFill.BorderSizePixel = 0
barFill.ZIndex = 1

-- Percentage Label
local percentLabel = Instance.new("TextLabel", bg)
percentLabel.Size = UDim2.new(1, 0, 0.05, 0)
percentLabel.Position = UDim2.new(0, 0, 0.57, 0)
percentLabel.BackgroundTransparency = 1
percentLabel.Text = "0%"
percentLabel.Font = Enum.Font.GothamSemibold
percentLabel.TextScaled = true
percentLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
percentLabel.TextWrapped = true
percentLabel.ZIndex = 1

-- Animate loading
task.spawn(function()
	for i = 1, 100 do
		barFill.Size = UDim2.new(i / 100, 0,
